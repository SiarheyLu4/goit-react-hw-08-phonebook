{"version":3,"file":"static/js/190.1409ee5c.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","redux/filter/filter-selectors.js","components/Filter/Filter.jsx","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.jsx","components/Phonebook/Phonebook.jsx","Pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from 'styled-components';\r\n\r\nimport { addContact } from \"redux/contacts/contacts-operations\";\r\n\r\nexport function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeForm = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      \r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      \r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  const onAddContact = (payload) => {\r\n    const action = addContact(payload);\r\n    dispatch(action);\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    onAddContact({name, number});\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit}>\r\n        <Label>\r\n          Name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            placeholder=\"Jacob Mercer\"\r\n            value={name}\r\n            onChange={onChangeForm}\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Number\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            placeholder=\"123-45-67\"\r\n            value={number}\r\n            onChange={onChangeForm}\r\n          />\r\n        </Label>\r\n        <Btm type=\"submit\">Add contact</Btm>\r\n      </Form>\r\n  )\r\n}\r\n\r\nconst Form = styled.form`\r\n  display: table-caption;\r\n  margin: 12px;\r\n  border: 2px solid grey;\r\n  border-radius: 12px;\r\n  padding: 8px;\r\n`\r\n\r\nconst Label = styled.label`\r\n  font-size: 20px;\r\n`\r\n\r\nconst Input = styled.input`\r\n  margin: 12px 0;\r\n  padding: 4px;\r\n  border: 1px solid;\r\n  border-radius: 4px;\r\n`\r\n\r\nconst Btm = styled.button`\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  background: darkgray;\r\n  &:hover {\r\n    background: #d3a6a6;\r\n  }\r\n`","export const getFilter = store => store.filter;","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getFilter } from \"redux/filter/filter-selectors\";\r\nimport { setFilter } from \"redux/filter/filter-actions\";\r\n\r\nexport const Filter = () => {\r\n  const filter = useSelector(getFilter);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSetFilter = ({target}) => {\r\n    dispatch(setFilter(target.value));\r\n  }\r\n\r\n  return (\r\n    <Label>Find contacts by name\r\n          <Input\r\n            type=\"search\"\r\n            name=\"filter\"\r\n            placeholder=\"enter part or all of the name\"\r\n            value={filter}\r\n            onChange={onSetFilter}\r\n          />\r\n        </Label>\r\n  )\r\n}\r\n\r\nconst Input = styled.input`\r\n  margin: 12px 0;\r\n  padding: 4px;\r\n  border: 1px solid;\r\n  border-radius: 4px;\r\n`\r\n\r\nconst Label = styled.label`\r\n  font-size: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`","export const getContacts = ({contacts}) => contacts.items;\n\nexport const getFilterContacts = ({ contacts, filter }) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter));\n};\n\nexport const getLoader = ({ contacts }) => contacts.loading;","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getFilterContacts } from \"redux/contacts/contacts-selectors\";\r\nimport { removeContact } from \"redux/contacts/contacts-operations\";\r\n\r\nexport const ContactList = () => {\r\n  const contacts = useSelector(getFilterContacts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onRemoveContact = (id) => {\r\n    dispatch(removeContact(id));\r\n  }\r\n\r\n  return (\r\n    <Ul>\r\n      {contacts.sort((a, b) => a.name.localeCompare(b.name)).map(({id, name, number}) => (\r\n        \r\n        <Li key={id}>{name}: {number}\r\n            <Btm type='' onClick={() => onRemoveContact(id, name)}> Del </Btm>\r\n        </Li>\r\n        \r\n      ))}\r\n    </Ul>\r\n  )\r\n}\r\n\r\nconst Btm = styled.button`\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  margin-left: 8px;\r\n  background: darkgray;\r\n  &:hover {\r\n    background: #d3a6a6;\r\n  }\r\n`\r\n\r\nconst Ul = styled.ul`\r\n  list-style: none;\r\n  padding: 8px;\r\n`\r\n\r\nconst Li = styled.li`\r\n  padding: 2px 0;\r\n`","import styled from 'styled-components';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\r\nimport { Filter } from \"components/Filter/Filter\";\r\nimport { ContactList } from \"components/ContactList/ContactList\";\r\nimport { Loader } from 'components/Loader/Loader';\r\n\r\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\r\nimport { getLoader } from 'redux/contacts/contacts-selectors';\r\n\r\nconst Phonebook = () => {\r\n  const loader = useSelector(getLoader);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts())\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Card>\r\n        {loader && <Loader />}\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </Card>\r\n    )\r\n}\r\n\r\nexport default Phonebook;\r\n\r\nconst Card = styled.div`\r\n  margin: 0 auto;\r\n  padding: 16px;\r\n  width: 400px;\r\n  border: 4px solid;\r\n  border-radius: 20px;\r\n  background: lavender;\r\n`\r\n","\n\nimport Phonebook from \"components/Phonebook/Phonebook\";\n\n\nconst ContactsPage = () => {\n\n  return (\n    <Phonebook/>\n  )\n}\n\nexport default ContactsPage;"],"names":["ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","onChangeForm","e","target","value","Form","onSubmit","preventDefault","payload","action","addContact","onAddContact","Label","Input","type","pattern","title","required","placeholder","onChange","Btm","styled","getFilter","store","filter","Filter","useSelector","setFilter","getFilterContacts","contacts","normalizedFilter","toLowerCase","items","contact","includes","getLoader","loading","ContactList","Ul","sort","a","b","localeCompare","map","id","Li","onClick","removeContact","onRemoveContact","loader","useEffect","fetchContacts","Card","Loader"],"sourceRoot":""}