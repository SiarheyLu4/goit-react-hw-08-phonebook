{"version":3,"file":"static/js/944.801db539.chunk.js","mappings":"kPAAaA,EAAe,CAC1BC,KAAM,GACNC,MAAO,GACPC,SAAU,I,kBCgCZ,EA7BqB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACrB,GAA4CC,EAAAA,EAAAA,GAAQ,CAACL,aAAAA,EAAcI,SAAAA,IAA5DE,EAAP,EAAOA,MAAOC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,aAEpBP,EAA0BK,EAA1BL,KAAMC,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAErB,OACE,UAACM,EAAD,YACE,2CACA,UAACC,EAAD,CAAMC,OAAO,GAAGP,SAAUI,EAA1B,WACE,4BACE,SAACI,EAAD,CAAOC,QAAQ,GAAf,yBACA,SAACC,EAAD,CAAOC,MAAOd,EAAMA,KAAK,OAAOe,SAAUT,EAAcU,KAAK,OAAOC,YAAY,iBAAiBC,UAAQ,QAE3G,4BACE,SAACP,EAAD,CAAOC,QAAQ,GAAf,0BACA,SAACC,EAAD,CAAOC,MAAOb,EAAOD,KAAK,QAAQe,SAAUT,EAAcU,KAAK,QAAQC,YAAY,oBAErF,4BACE,SAACN,EAAD,CAAOC,QAAQ,GAAf,6BACA,SAACC,EAAD,CAAOC,MAAOZ,EAAUF,KAAK,WAAWe,SAAUT,EAAcU,KAAK,WAAWC,YAAY,uBAE9F,0BACE,SAACE,EAAD,CAAKH,KAAK,SAAV,iCAKT,EAIKR,EAAOY,EAAAA,GAAAA,IAAH,qJAQJX,EAAOW,EAAAA,GAAAA,KAAH,6GAOJT,EAAQS,EAAAA,GAAAA,MAAH,4CAILP,EAAQO,EAAAA,GAAAA,MAAH,2IAOLD,EAAMC,EAAAA,GAAAA,OAAH,yJ,oBChCT,EArBqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA+BC,EAAAA,EAAAA,IAAYC,EAAAA,IAAnCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,WAOhB,OANgBH,EAAAA,EAAAA,IAAYI,EAAAA,KAOnB,SAAC,KAAD,CAAUC,GAAG,eAIpB,iCACE,SAAC,EAAD,CAAczB,SAVC,SAAC0B,GAClBR,GAASS,EAAAA,EAAAA,GAAOD,GACjB,IASIJ,IAAU,8BAAGM,EAAAA,OAAAA,QAAA,UAAkBL,GAAc,CAAEM,SAAU,mBAG/D,C,iECND,IArBgB,SAAC,GAA8B,IAA7BjC,EAA4B,EAA5BA,aAAcI,EAAc,EAAdA,SAC5B,GAA0B8B,EAAAA,EAAAA,WAAS,UAAIlC,IAAvC,eAAOM,EAAP,KAAc6B,EAAd,KAiBA,MAAO,CAAC7B,MAAAA,EAAO6B,SAAAA,EAAU5B,aAfJ,SAAC,GAAc,IAAb6B,EAAY,EAAZA,OACXnC,EAA+BmC,EAA/BnC,KAAMc,EAAyBqB,EAAzBrB,MAAOE,EAAkBmB,EAAlBnB,KAAMoB,EAAYD,EAAZC,QACrBC,EAAqB,aAATrB,EAAuBoB,EAAUtB,EACnDoB,GAAS,SAAAI,GAAS,yBACXA,GADW,cAEbtC,EAAOqC,GAFM,GAIrB,EAQsC9B,aANlB,SAACgC,GAClBA,EAAEC,iBACFrC,GAAS,UAAIE,IACb6B,GAAS,UAAInC,GAChB,EAGJ,C","sources":["components/RegisterForm/initialState.js","components/RegisterForm/RegisterForm.jsx","Pages/RegisterPage/RegisterPage.jsx","shared/hooks/useForm.js"],"sourcesContent":["export const initialState = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n}","import styled from \"styled-components\";\n\nimport { initialState } from \"./initialState\";\nimport useForm from \"shared/hooks/useForm\";\n\n\nconst RegisterForm = ({onSubmit}) => {\n  const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit})\n\n  const { name, email, password } = state;\n  \n  return (\n    <Card>\n      <h2>Register page</h2>\n      <Form action=\"\" onSubmit={handleSubmit}>\n        <div>\n          <Label htmlFor=\"\">User name:</Label>\n          <Input value={name} name=\"name\" onChange={handleChange} type=\"text\" placeholder=\"Enter username\" required />\n        </div>\n        <div>\n          <Label htmlFor=\"\">User Email:</Label>\n          <Input value={email} name=\"email\" onChange={handleChange} type=\"email\" placeholder=\"Enter email\" />\n        </div>\n        <div>\n          <Label htmlFor=\"\">User password:</Label>\n          <Input value={password} name=\"password\" onChange={handleChange} type=\"password\" placeholder=\"Enter password\" />\n        </div>\n        <div>\n          <Btm type=\"submit\">Registration</Btm>\n        </div>\n      </Form>\n    </Card>\n  )\n};\n\nexport default RegisterForm;\n\nconst Card = styled.div`\n  margin: 0 auto;\n  padding: 16px;\n  width: 400px;\n  border: 4px solid;\n  border-radius: 20px;\n  background: lavender;\n`\nconst Form = styled.form`\n  margin: 12px;\n  border: 2px solid grey;\n  border-radius: 12px;\n  padding: 8px;\n`\n\nconst Label = styled.label`\n  font-size: 20px;\n`\n\nconst Input = styled.input`\n  margin: 12px 0;\n  padding: 4px;\n  border: 1px solid;\n  border-radius: 4px;\n  width: -webkit-fill-available;\n`\nconst Btm = styled.button`\n  border: none;\n  cursor: pointer;\n  border-radius: 4px;\n  background: darkgray;\n  &:hover {\n    background: #d3a6a6;\n  }\n`","import { Notify } from 'notiflix';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Navigate } from 'react-router-dom';\n\nimport RegisterForm from \"components/RegisterForm/RegisterForm\";\n\nimport { signup } from \"redux/auth/auth-operations\";\n\nimport { getAuthError, isAuth } from \"redux/auth/auth-selectors\";\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const { status, statusText } = useSelector(getAuthError);\n  const isLogin = useSelector(isAuth);\n\n  const onRegister = (data) => {\n    dispatch(signup(data));\n  }\n\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />\n  }\n\n  return (\n    <>\n      <RegisterForm onSubmit={onRegister} />\n      {status && <>{Notify.failure(`${statusText}`, { position: \"center-top\" })}</>}\n    </>\n  )\n}\n\nexport default RegisterPage;","import { useState } from \"react\";\n\nconst useForm = ({initialState, onSubmit}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n        const { name, value, type, checked } = target;\n        const newValue = (type === \"checkbox\") ? checked : value;\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState})\n    };\n\n    return {state, setState, handleChange, handleSubmit}\n}\n\nexport default useForm;"],"names":["initialState","name","email","password","onSubmit","useForm","state","handleChange","handleSubmit","Card","Form","action","Label","htmlFor","Input","value","onChange","type","placeholder","required","Btm","styled","dispatch","useDispatch","useSelector","getAuthError","status","statusText","isAuth","to","data","signup","Notify","position","useState","setState","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}